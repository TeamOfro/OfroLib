apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'java-library'

group = 'github.teamofro'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }

    maven { url = 'https://jitpack.io' }
    maven { url = 'https://repo.onarandombox.com/content/groups/public/' }
    maven { url = 'https://repo.minebench.de/' }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.20.2-R0.1-SNAPSHOT'

    api 'com.github.MilkBowl:VaultAPI:1.7'

    api 'com.onarandombox.multiversecore:multiverse-core:4.3.9'
    api 'com.onarandombox.multiverseinventories:multiverse-inventories:4.2.5'
    api 'com.onarandombox.multiverseportals:multiverse-portals:4.2.2'
    api 'com.onarandombox.multiversenetherportals:Multiverse-NetherPortals:4.2.1'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

jar {
    archiveFileName = project.name+'.jar'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveFileName = project.name + '-sources.jar'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            version = project.version
            groupId = project.group
            artifactId = project.name
            artifact sourcesJar {
                archiveClassifier = 'sources'
            }
        }
    }
}
